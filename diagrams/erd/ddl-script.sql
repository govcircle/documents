create table public.application_user
(
    status        smallint
        constraint application_user_status_check
            check ((status >= 0) AND (status <= 1)),
    created_at    timestamp(6),
    created_by_id bigint
        constraint fkoj9ieb61cq5ejr6pjtjc979yc
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fkrmyfvxoiss35aloap3qn7hqy9
            references public.application_user,
    email         varchar(255),
    ip            varchar(255),
    nonce         varchar(255),
    user_address  varchar(255) not null
        unique,
    username      varchar(255)
);

alter table public.application_user
    owner to sa;

create table public.action
(
    dropped_epoch    integer not null,
    enacted_epoch    integer not null,
    expired_epoch    integer not null,
    expiry_epoch     integer not null,
    ratified_epoch   integer not null,
    submission_epoch integer not null,
    vote_abstain     integer not null,
    vote_no          integer not null,
    vote_yes         integer not null,
    created_at       timestamp(6),
    created_by_id    bigint
        constraint fke298xlr74gif74dpde70vmpvd
            references public.application_user,
    id               bigint generated by default as identity
        primary key,
    updated_at       timestamp(6),
    updated_by_id    bigint
        constraint fk9xdamjko1ig04ysox9t390ny2
            references public.application_user,
    action_type      varchar(255)
        constraint action_action_type_check
            check ((action_type)::text = ANY
                   ((ARRAY ['MOTION_OF_NO_CONFIDENCE'::character varying, 'UPDATE_COMMITTEE'::character varying, 'NEW_CONSTITUTION'::character varying, 'HF_INITIATION'::character varying, 'PROTOCOL_PARAMETER_CHANGE'::character varying, 'PROTOCOL_PARAMETER_CHANGE_ECONOMIC_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_TECHNICAL_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_GOVERNANCE_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_NETWORK_GROUP'::character varying, 'TREASURY_WITHDRAWAL'::character varying, 'INFO'::character varying])::text[])),
    cert_index       varchar(255),
    deposit_amount   varchar(255),
    ip               varchar(255),
    stake_address    varchar(255),
    status           varchar(255)
        constraint action_status_check
            check ((status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'EXPIRED'::character varying, 'INACTIVE'::character varying])::text[])),
    tag              varchar(255),
    title            varchar(255),
    tx_hash          varchar(255)
);

alter table public.action
    owner to sa;

create table public.application_user_authorities
(
    application_user_id bigint not null
        constraint fkmriiktj2l0p23u5lnlah3g9t9
            references public.application_user,
    authorities         varchar(255)
);

alter table public.application_user_authorities
    owner to sa;

create table public.constitution
(
    created_at    timestamp(6),
    created_by_id bigint
        constraint fkdgxebm23rlf8aqgxo0b6tlg01
            references public.application_user,
    gov_action_id bigint
        unique
        constraint fkdb2tqfmm8i37lj7rimuyul11u
            references public.action,
    id            bigint generated by default as identity
        primary key,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fk18ecrr70igu9apg51t1q5xukq
            references public.application_user,
    data_hash     varchar(255),
    ip            varchar(255),
    script        varchar(255),
    url           varchar(255),
    certificate   jsonb
);

alter table public.constitution
    owner to sa;

create table public.merge_request
(
    created_at    timestamp(6),
    created_by_id bigint
        constraint fkg8eacg50aujg085q654yw1tpd
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fke3faerkpmxjlrcm6rjiduoh2i
            references public.application_user,
    ip            varchar(255)
);

alter table public.merge_request
    owner to sa;

create table public.opinion
(
    created_at    timestamp(6),
    created_by_id bigint
        constraint fks30wsqtx3pjah3ef3xxypt3a1
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    owner_id      bigint
        unique
        constraint fkmj39gfdwlt695o3rhp37m4m8u
            references public.application_user,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fklbyvfxpbl6yej47j1tcrbskpv
            references public.application_user,
    intention     varchar(255),
    ip            varchar(255),
    status        varchar(255)
        constraint opinion_status_check
            check ((status)::text = ANY
                   ((ARRAY ['CONFLICT'::character varying, 'DRAFT'::character varying, 'LIVE'::character varying, 'VOTING_PENDING'::character varying, 'RATIFIED'::character varying, 'DENIED'::character varying, 'CLOSED'::character varying])::text[])),
    user_act      text
);

alter table public.opinion
    owner to sa;

create table public.amendment
(
    constitution_id bigint
        constraint fkoc6a4j4c3p31lngst40n4fn6t
            references public.constitution,
    created_at      timestamp(6),
    created_by_id   bigint
        constraint fkdcg3lxt8rvcd3493r7e0j3q69
            references public.application_user,
    id              bigint generated by default as identity
        primary key,
    opinion_id      bigint
        constraint fk8poe7dnvn8ma0rnb9e2u1619n
            references public.opinion,
    updated_at      timestamp(6),
    updated_by_id   bigint
        constraint fkq60362664syvsyosunkfd67hu
            references public.application_user,
    amendment_type  varchar(255)
        constraint amendment_amendment_type_check
            check ((amendment_type)::text = ANY
                   ((ARRAY ['SPLIT'::character varying, 'MERGE'::character varying, 'EDIT'::character varying, 'DELETE'::character varying, 'ADD'::character varying])::text[])),
    ip              varchar(255),
    src_rules       text,
    target_rules    text
);

alter table public.amendment
    owner to sa;

create table public.role
(
    created_at    timestamp(6),
    created_by_id bigint
        constraint fkn380e7scpyxmwaqivpublftl5
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fk7kffmbj52yqtdrmf4f9sjdft7
            references public.application_user,
    ip            varchar(255),
    title         varchar(255) not null
        unique
);

alter table public.role
    owner to sa;

create table public.role_authorities
(
    role_id     bigint not null
        constraint fk8dv2uo3imjpm4dmk7pge9v2vo
            references public.role,
    authorities varchar(255)
);

alter table public.role_authorities
    owner to sa;

create table public.rule
(
    created_at    timestamp(6),
    created_by_id bigint
        constraint fk4q2jcr0k48x6fmrxswmshog8f
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fkqdso4hsuym88tbo4kds6vqsi8
            references public.application_user,
    ip            varchar(255),
    rule          varchar(255),
    status        varchar(255)
        constraint rule_status_check
            check ((status)::text = ANY ((ARRAY ['EXPIRED'::character varying, 'ACTIVE'::character varying])::text[]))
);

alter table public.rule
    owner to sa;

create table public.rule_change_history
(
    base_rule_id    bigint,
    created_at      timestamp(6),
    created_by_id   bigint
        constraint fkpam7nedho4sry7da3bpflnuea
            references public.application_user,
    id              bigint generated by default as identity
        primary key,
    revised_rule_id bigint,
    updated_at      timestamp(6),
    updated_by_id   bigint
        constraint fk4uhn8806r4hktl0p8ymcjnxa2
            references public.application_user,
    amendment_type  varchar(255)
        constraint rule_change_history_amendment_type_check
            check ((amendment_type)::text = ANY
                   ((ARRAY ['SPLIT'::character varying, 'MERGE'::character varying, 'EDIT'::character varying, 'DELETE'::character varying, 'ADD'::character varying])::text[])),
    ip              varchar(255)
);

alter table public.rule_change_history
    owner to sa;

create table public.user_role
(
    end_epoch                 integer not null,
    start_epoch               integer not null,
    created_at                timestamp(6),
    created_by_id             bigint
        constraint fk94k18ybu95ldu92vykianta2a
            references public.application_user,
    id                        bigint generated by default as identity
        primary key,
    role_id                   bigint
        constraint fka68196081fvovjhkek5m97n3y
            references public.role,
    updated_at                timestamp(6),
    updated_by_id             bigint
        constraint fkan4ii44gnlvbiw9lshrxtnmp7
            references public.application_user,
    user_id                   bigint
        constraint fkd3wm0wi7xoh28n6gkdy8o2t78
            references public.application_user,
    actor_registration_status varchar(255)
        constraint user_role_actor_registration_status_check
            check ((actor_registration_status)::text = ANY
                   ((ARRAY ['REGISTER'::character varying, 'DEREGISTER'::character varying])::text[])),
    ip                        varchar(255)
);

alter table public.user_role
    owner to sa;

create table public.application_user_user_roles
(
    application_user_id bigint not null
        constraint fkt70dlel1o63ftoi96xgw5smqv
            references public.application_user,
    user_roles_id       bigint not null
        unique
        constraint fkhsgt4rghwpgrsbhhhajlldmd8
            references public.user_role
);

alter table public.application_user_user_roles
    owner to sa;

create table public.voting_threshold
(
    percentage    integer not null,
    created_at    timestamp(6),
    created_by_id bigint
        constraint fki5pxteer8hwm337dx3fe1b8xi
            references public.application_user,
    id            bigint generated by default as identity
        primary key,
    role_id       bigint
        constraint fkrwfaylwm5t7bx65r3om1twn7g
            references public.role,
    updated_at    timestamp(6),
    updated_by_id bigint
        constraint fkrqjvlg6jn4nsb2sv1xrig442r
            references public.application_user,
    action_type   varchar(255)
        constraint voting_threshold_action_type_check
            check ((action_type)::text = ANY
                   ((ARRAY ['MOTION_OF_NO_CONFIDENCE'::character varying, 'UPDATE_COMMITTEE'::character varying, 'NEW_CONSTITUTION'::character varying, 'HF_INITIATION'::character varying, 'PROTOCOL_PARAMETER_CHANGE'::character varying, 'PROTOCOL_PARAMETER_CHANGE_ECONOMIC_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_TECHNICAL_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_GOVERNANCE_GROUP'::character varying, 'PROTOCOL_PARAMETER_CHANGE_NETWORK_GROUP'::character varying, 'TREASURY_WITHDRAWAL'::character varying, 'INFO'::character varying])::text[])),
    ip            varchar(255)
);

alter table public.voting_threshold
    owner to sa;


